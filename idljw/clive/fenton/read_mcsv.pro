; Procedure to read in CSV files with any number of data channels.; Returns the header information as an array. The data array returned is; such that the first and second columns of the 2-D array are the 'y' ; and 'x' co-ordinates of the first channel respectively. Third and fourth; columns are 'x', 'y' of the next channel etc. The channels begin with ; that mentioned first in the screen readout. i.e. usually the highest; channel number first.;; Written by Fenton Glass, Oct. 1999pro read_mcsv, filename, info=inf_array, data=data_array, plot=plot, norm=normif n_elements(filename) eq 0 then message,'Please provide filename'get_lun, unit; read in header infodummy='a'info = ['']openr, unit, filenamewhile dummy ne '' do begin    readf, unit, dummy    info = [info, dummy]end; create header info arraym=strparse(info(1), '","', size_inf_array)array_width=minf_array=make_array(m+1, n_elements(info)-2, /string)inf_arr_i=make_array(m+1, /string)n_chan=(m+1)/2print, 'There appear to be ' +strtrim(n_chan, 1) +' channels in this CSV file, '; parse the read info into the arrayfor i=0, n_elements(info)-3 do begin	m=strparse(info(i+1),'","', inf_arr_i)	inf_array(*,i)=inf_arr_iendprint, 'from '+ inf_array(1,0) +' to '+ inf_array(array_width,0); read datadata=['']data_line=data;while data ne '' do beginwhile not eof(unit) do begin    readf, unit, data_line    data = [data, data_line];    print, n_elements(data)end; create data arrayl=strparse(data(1), '","', size_data_array)data_array=make_array(l+1, n_elements(data)-1, /float)data_arr_i=make_array(l+1, /float); parse the read data into the arrayfor i=0, n_elements(data)-2 do begin	l=strparse(data(i+1),'","', data_arr_i)	data_array(*,i)=data_arr_iendfree_lun,unitif keyword_set(norm) then beginnorm_const=fltarr(n_chan)auc=fltarr(n_chan)	for i=1, n_chan*2-1, 2 do begin	auc((i-1)/2)=total(data_array(i,*))	endnorm_const(*)=mean(auc)/auc(*)	for i=1, n_chan*2-1, 2 do begin	data_array(i,*)=data_array(i,*)*norm_const((i-1)/2)	endprint, aucprint, norm_constendif keyword_set(plot) then begin	for i=0, n_chan*2-1, 2 do begin	window, i/2	plot, data_array(i,*), data_array(i+1,*), title=inf_array(i+1,0)+'  '+ $ inf_array(i+1, 3) +'  '+ inf_array(i+1, 4), xtitle=inf_array(i+1, 10),$ ytitle=inf_array(i+1, 16)	end	endend